events {
    worker_connections 1024;
}

http {
    upstream backend {
        server my-flask-app:5000; # Docker automatically updates /etc/hosts with container names!
    }

    server {
        listen 8080;
        listen 8443 ssl;

        # Require TLS 1.3
        ssl_protocols TLSv1.3;

        # Files to use for TLS
        ssl_certificate /certs/certificate.crt; # Keep this public!
        ssl_certificate_key /certs/private.key; # Keep this secret!
        ssl_dhparam /certs/dhparam.pem; # Diffie-Hellman parameter

        # Require strong cryptography
        ssl_ciphers 'TLS_CHACHA20_POLY1305_SHA256'; # Only use ChaCha20-Poly1305
        ssl_prefer_server_ciphers off; # Disable weak ciphers
        ssl_ecdh_curve secp521r1; # Use a strong curve !
        ssl_session_cache shared:SSL:10m; # Cache SSL sessions
        ssl_session_tickets off; # Disable session tickets to prevent replay attacks
        ssl_stapling on; # Enable OCSP stapling
        ssl_stapling_verify on; # Requires a valid OCSP response

        add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload" always; # Protect against SSL stripping attacks
        add_header X-Frame-Options DENY; # Protect against clickjacking attacks
        add_header X-Content-Type-Options nosniff; # Protect against MIME type confusion attacks
        add_header X-XSS-Protection "1; mode=block"; # Protect against XSS attacks

        location / {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}